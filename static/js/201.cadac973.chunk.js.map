{"version":3,"file":"static/js/201.cadac973.chunk.js","mappings":"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","sources":["utils/utils.ts","services/searchService.ts","components/SearchSlider.tsx","pages/Search.tsx"],"sourcesContent":["export function makeImagePath(id: string, format?: string) {\n  return `https://image.tmdb.org/t/p/${format ? format : \"original\"}/${id}`\n}","import React from \"react\";\n\n\n\nconst API_KEY = process.env.REACT_APP_API_KEY\nconst BASE_PATH = process.env.REACT_APP_API_BASE_PATH\n\n\nexport function getCollections(query: string | null) {\n  return fetch(`${BASE_PATH}/search/collection?query=${query}&api_key=${API_KEY}`).then(\n    (response) => response.json()\n  )\n}","import { AnimatePresence, motion, useScroll } from \"framer-motion\";\nimport React, { useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport styled, { css } from \"styled-components\";\nimport { makeImagePath } from \"../utils/utils\";\n\nimport {\n  IGetAiringTVShowsResult,\n  IGetOnTheAirTVShowsResult,\n  IGetPopularTVShowsResult,\n  IGetTopTVShowsResult,\n} from \"../types/tvTypes\";\nimport { IGetTVShowsResult } from \"../types/searchTypes\";\n\nconst SLIDE_OFFSET = 6; // 페이지네이션 개수\n\nconst Slider = styled.div`\n  position: relative;\n  width: 100%;\n  height: 200px;\n`;\n\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 10px;\n  margin-bottom: 5px;\n  grid-template-columns: repeat(${SLIDE_OFFSET}, 1fr);\n  position: absolute;\n  width: 100%;\n`;\n\nconst Box = styled(motion.div)<{ $bgPhoto: string }>`\n  ${({ $bgPhoto }) => css`\n    background: url(${$bgPhoto}) center/cover no-repeat, white;\n  `}\n  height: 200px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\n\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: ${({ theme }) => theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 18px;\n  }\n`;\n\nconst ArrowButton = styled.div<{ $left: boolean }>`\n  position: absolute;\n  ${({ $left }) => ($left ? \"left: 0;\" : \"right: 0;\")}\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    width: 50px;\n    height: 50px;\n    opacity: 0.5;\n    transition: opacity 0.2s ease-in-out, fill 0.2s ease-in-out;\n  }\n\n  &:hover svg {\n    fill: white;\n    opacity: 1;\n  }\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\n\nconst BigMovie = styled(motion.div)<{ $scrollY: number }>`\n  position: absolute;\n  width: 40vw;\n  height: 80vh;\n  top: ${(props) => props.$scrollY + 100}px;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  background-color: ${(props) => props.theme.black.lighter};\n  border-radius: 15px;\n  overflow: hidden;\n`;\n\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 400px;\n`;\nconst BigTitle = styled.h3`\n  color: ${(props) => props.theme.white.lighter};\n  padding: 20px;\n  font-size: 46px;\n  position: relative;\n  top: -80px;\n`;\n\nconst BigOverview = styled.p`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: ${(props) => props.theme.white.lighter};\n`;\n\nconst boxVariants = {\n  normal: { scale: 1 },\n  hover: {\n    scale: 1.3,\n    y: -80,\n    transition: { delay: 0.5, duration: 0.1, type: \"tween\" },\n  },\n};\n\nconst rowVariants = {\n  hidden: (direction: number) => ({\n    x: direction > 0 ? window.outerWidth + 5 : -window.outerWidth - 5,\n  }),\n  visible: { x: 0 },\n  exit: (direction: number) => ({\n    x: direction > 0 ? -window.outerWidth - 5 : window.outerWidth + 5,\n  }),\n};\n\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: { delay: 0.5, duration: 0.1, type: \"tween\" },\n  },\n};\n\ninterface SearchSliderProps {\n  data?: IGetTVShowsResult | null;\n}\n\nconst SearchSlider: React.FC<SearchSliderProps> = ({ data }) => {\n  const navigate = useNavigate();\n  const [index, setIndex] = useState(0);\n  const [direction, setDirection] = useState(1);\n  const [selectedId, setSelectedId] = useState<string | null>(null);\n\n  const [searchParams] = useSearchParams();\n  const keyword = searchParams.get(\"keyword\") || \"\";\n\n  const onBoxClicked = (id: string) => setSelectedId(id);\n\n  const changeIndex = (newDirection: number) => {\n    if (!data) return;\n    setDirection(newDirection);\n    setIndex((prev) => {\n      const maxIndex = Math.ceil(data.results.length / SLIDE_OFFSET) - 1;\n      return newDirection > 0\n        ? prev === maxIndex\n          ? 0\n          : prev + 1\n        : prev === 0\n        ? maxIndex\n        : prev - 1;\n    });\n  };\n\n  const onOverlayClick = () => {\n    setSelectedId(null);\n    navigate(`/search?keyword=${keyword}`);\n    return;\n  };\n\n  const { scrollY } = useScroll();\n\n  const clickedMovie =\n    selectedId &&\n    [data].flatMap((data) => data?.results || []).find((movie) => String(movie.id) === selectedId);\n\n  return (\n    <>\n      <Slider>\n        <AnimatePresence custom={direction} initial={false}>\n          <Row\n            variants={rowVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n            transition={{ type: \"tween\", duration: 1 }}\n            key={index}\n            custom={direction}\n          >\n            {data?.results\n              .slice(1)\n              .slice(index * SLIDE_OFFSET, (index + 1) * SLIDE_OFFSET)\n              .map((data) => (\n                <Box\n                  layoutId={String(data.id)}\n                  key={data.id}\n                  variants={boxVariants}\n                  whileHover=\"hover\"\n                  initial=\"normal\"\n                  transition={{ type: \"tween\" }}\n                  $bgPhoto={makeImagePath(data.backdrop_path, \"w500\")}\n                  onClick={() => onBoxClicked(String(data.id))}\n                >\n                  <Info variants={infoVariants}>\n                    <h4>{data.name}</h4>\n                  </Info>\n                </Box>\n              ))}\n          </Row>\n        </AnimatePresence>\n\n        <ArrowButton $left={true} onClick={() => changeIndex(-1)}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n            <path d=\"M48 256a208 208 0 1 1 416 0A208 208 0 1 1 48 256zm464 0A256 256 0 1 0 0 256a256 256 0 1 0 512 0zM217.4 376.9c4.2 4.5 10.1 7.1 16.3 7.1c12.3 0 22.3-10 22.3-22.3l0-57.7 96 0c17.7 0 32-14.3 32-32l0-32c0-17.7-14.3-32-32-32l-96 0 0-57.7c0-12.3-10-22.3-22.3-22.3c-6.2 0-12.1 2.6-16.3 7.1L117.5 242.2c-3.5 3.8-5.5 8.7-5.5 13.8s2 10.1 5.5 13.8l99.9 107.1z\" />\n          </svg>\n        </ArrowButton>\n\n        <ArrowButton $left={false} onClick={() => changeIndex(1)}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n            <path d=\"M464 256A208 208 0 1 1 48 256a208 208 0 1 1 416 0zM0 256a256 256 0 1 0 512 0A256 256 0 1 0 0 256zM294.6 151.2c-4.2-4.6-10.1-7.2-16.4-7.2C266 144 256 154 256 166.3l0 41.7-96 0c-17.7 0-32 14.3-32 32l0 32c0 17.7 14.3 32 32 32l96 0 0 41.7c0 12.3 10 22.3 22.3 22.3c6.2 0 12.1-2.6 16.4-7.2l84-91c3.5-3.8 5.4-8.7 5.4-13.9s-1.9-10.1-5.4-13.9l-84-91z\" />\n          </svg>\n        </ArrowButton>\n      </Slider>\n\n      <AnimatePresence>\n        {selectedId ? (\n          <>\n            <Overlay onClick={onOverlayClick} exit={{ opacity: 0 }} animate={{ opacity: 1 }} />\n            <BigMovie layoutId={selectedId} $scrollY={scrollY.get()}>\n              {clickedMovie && (\n                <>\n                  <BigCover\n                    style={{\n                      backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                        clickedMovie.backdrop_path,\n                        \"w500\",\n                      )})`,\n                    }}\n                  />\n                  <BigTitle>{clickedMovie.name}</BigTitle>\n                  <BigOverview>{clickedMovie.overview}</BigOverview>\n                </>\n              )}\n            </BigMovie>\n          </>\n        ) : null}\n      </AnimatePresence>\n    </>\n  );\n};\n\nexport default SearchSlider;\n","import React from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { getCollections } from \"../services/searchService\";\nimport { IGetTVShowsResult } from \"../types/searchTypes\";\nimport styled from \"styled-components\";\nimport { AnimatePresence, motion, useScroll } from \"framer-motion\";\nimport { makeImagePath } from \"../utils/utils\";\nimport TvSlider from \"../components/TvSlider\";\nimport SearchSlider from \"../components/SearchSlider\";\n\nconst Wrapper = styled.div`\n  background: black;\n`;\n\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Banner = styled.div<{ $bgPhoto: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  /* padding: 60px; */\n\n  // 이렇게 하면 위쪽은 밝고, 아래쪽이 어두운 이미지 형태 백그라운드 만들기 가능\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.$bgPhoto});\n  background-size: cover;\n`;\n\nconst SliderWrapper = styled.div`\n  /* position: relative; */\n  padding: 20px 0;\n  padding-top: 50px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: black;\n  gap: 20px;\n`;\nconst Title = styled.h2`\n  font-size: 68px;\n  margin-bottom: 20px;\n`;\nconst OverView = styled.p`\n  font-size: 30px;\n  width: 50%;\n`;\n\nconst Subtitle = styled.h6`\n  padding-top: 20px;\n  font-size: 40px;\n  color: ${(props) => props.theme.white.lighter};\n`;\n\nexport default function Search() {\n  const [searchParams] = useSearchParams();\n  const keyword = searchParams.get(\"keyword\") || \"\";\n\n  const { data, isPending, isError } = useQuery<IGetTVShowsResult>({\n    queryKey: [\"collections\", keyword],\n    queryFn: () => getCollections(keyword),\n  });\n\n  return (\n    <Wrapper>\n      {isPending ? (\n        <Loader> Loading...</Loader>\n      ) : (\n        <>\n          <SliderWrapper>\n            <Subtitle>Search Results for : {keyword}</Subtitle>\n            <SearchSlider data={data} />\n          </SliderWrapper>\n        </>\n      )}\n    </Wrapper>\n  );\n}\n"],"names":["makeImagePath","id","format","API_KEY","process","BASE_PATH","Slider","styled","div","Row","motion","Box","_ref","$bgPhoto","css","Info","_ref2","theme","black","lighter","ArrowButton","_ref3","$left","Overlay","BigMovie","props","$scrollY","BigCover","BigTitle","h3","white","BigOverview","p","boxVariants","normal","scale","hover","y","transition","delay","duration","type","rowVariants","hidden","direction","x","window","outerWidth","visible","exit","infoVariants","opacity","_ref4","data","navigate","useNavigate","index","setIndex","useState","setDirection","selectedId","setSelectedId","searchParams","useSearchParams","keyword","get","changeIndex","newDirection","prev","maxIndex","Math","ceil","results","length","scrollY","useScroll","clickedMovie","flatMap","find","movie","String","_jsxs","_Fragment","children","_jsx","AnimatePresence","custom","initial","variants","animate","slice","map","layoutId","whileHover","backdrop_path","onClick","onBoxClicked","name","xmlns","viewBox","d","onOverlayClick","style","backgroundImage","overview","Wrapper","Loader","SliderWrapper","Subtitle","h2","h6","Search","isPending","isError","useQuery","queryKey","queryFn","fetch","then","response","json","SearchSlider"],"sourceRoot":""}